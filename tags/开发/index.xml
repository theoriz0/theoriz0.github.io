<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>开发 on theoriz0's blog</title><link>https://theoriz0.github.io/tags/%E5%BC%80%E5%8F%91/</link><description>Recent content in 开发 on theoriz0's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 05 Nov 2023 16:45:52 +0800</lastBuildDate><atom:link href="https://theoriz0.github.io/tags/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml"/><item><title>My Git Cheatsheet</title><link>https://theoriz0.github.io/posts/my-git-cheatsheet/</link><pubDate>Sun, 05 Nov 2023 16:45:52 +0800</pubDate><guid>https://theoriz0.github.io/posts/my-git-cheatsheet/</guid><description>git stash git stash save &amp;ldquo;save message&amp;rdquo; : 执行暂存 （1）git stash save &amp;ldquo;save message&amp;rdquo; : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。
（2）git stash list ：查看stash了哪些存储
（3）git stash show ：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}
（4）git stash show -p : 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show stash@{$num} -p ，比如第二个：git stash show stash@{1} -p
（5）git stash apply :应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply stash@{$num} ， 比如第二个：git stash apply stash@{1}
（6）git stash pop ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}
（7）git stash drop stash@{$num} ：丢弃stash@{$num}存储，从列表中删除这个存储</description><content>&lt;h2 id="git-stash">git stash&lt;/h2>
&lt;p>git stash save &amp;ldquo;save message&amp;rdquo; : 执行暂存
（1）git stash save &amp;ldquo;save message&amp;rdquo; : 执行存储时，添加备注，方便查找，只有git stash 也要可以的，但查找时不方便识别。&lt;/p>
&lt;p>（2）git stash list ：查看stash了哪些存储&lt;/p>
&lt;p>（3）git stash show ：显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}，比如第二个 git stash show stash@{1}&lt;/p>
&lt;p>（4）git stash show -p : 显示第一个存储的改动，如果想显示其他存存储，命令：git stash show stash@{$num} -p ，比如第二个：git stash show stash@{1} -p&lt;/p>
&lt;p>（5）git stash apply :应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}，如果要使用其他个，git stash apply stash@{$num} ， 比如第二个：git stash apply stash@{1}&lt;/p>
&lt;p>（6）git stash pop ：命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下,默认为第一个stash,即stash@{0}，如果要应用并删除其他stash，命令：git stash pop stash@{$num} ，比如应用并删除第二个：git stash pop stash@{1}&lt;/p>
&lt;p>（7）git stash drop stash@{$num} ：丢弃stash@{$num}存储，从列表中删除这个存储&lt;/p>
&lt;p>（8）git stash clear ：删除所有缓存的stash&lt;/p>
&lt;p>没有在git 版本控制中的文件，是不能被git stash 存起来的。如果新文件需要暂存，先执行下git add 加到git版本控制中。&lt;/p>
&lt;p>git checkout 不会清除不冲突的文件？
如果要清除：git clean -xdf
-n 不实际删除，只是进行演练，展示将要进行的操作，有哪些文件将要被删除。（可先使用该命令参数，然后再决定是否执行）&lt;/p>
&lt;h2 id="git-reset">git reset&lt;/h2>
&lt;p>git reset &amp;ndash;hard HASH #返回到某个节点，不保留修改，已有的改动会丢失。
git reset &amp;ndash;soft HASH #返回到某个节点, 保留修改，已有的改动会保留，在未提交中，git status或git diff可看。&lt;/p>
&lt;h2 id="submodule">submodule&lt;/h2>
&lt;p>git clone &amp;ndash;recurse-submodules, or run git submodule update &amp;ndash;init &amp;ndash;recursive&lt;/p></content></item><item><title>常用的一些应用</title><link>https://theoriz0.github.io/posts/my-tool-apps/</link><pubDate>Sun, 05 Nov 2023 16:35:24 +0800</pubDate><guid>https://theoriz0.github.io/posts/my-tool-apps/</guid><description>语音转文字 讯飞：准确度略高，通过声纹可以区分说话人，贵。重要音频可以用。 Whisper：开源，免费，无法区分说话人。 Win客户端 | 对应模型（作者推荐 ggml-medium.bin） Python环境可以使用WhisperX
OCR 白描：
图表绘制 Markdown + Mermaid，画时序图很方表。 流程图：Draw.io
多媒体 ffmpeg： 其实对于个人来说（至少对我），最常用的不是转码，甚至说反而是不去转码，而是无损的包装格式转换，音频抽取，剪切，合并。
多端同步 Feem Bark
字典 汉语：新华字典、现代汉语词典、辞海 日语：新明解 英语：LDOCE 6 以及iOS、MacOS自带的字典们（无法从苹果全家桶抽身的重要原因）。
浏览器插件 Mark 还没用，未来可能会尝试： (Rustdesk)[https://rustdesk.com/index.html]：开源自建Teamviewer。</description><content>&lt;h2 id="语音转文字">语音转文字&lt;/h2>
&lt;p>讯飞：准确度略高，通过声纹可以区分说话人，贵。重要音频可以用。
Whisper：开源，免费，无法区分说话人。
&lt;a href="https://github.com/Const-me/Whisper">Win客户端&lt;/a> | &lt;a href="https://huggingface.co/ggerganov/whisper.cpp/tree/main">对应模型&lt;/a>（作者推荐 ggml-medium.bin）
Python环境可以使用&lt;a href="https://github.com/m-bain/whisperX">WhisperX&lt;/a>&lt;/p>
&lt;h2 id="ocr">OCR&lt;/h2>
&lt;p>白描：&lt;/p>
&lt;h2 id="图表绘制">图表绘制&lt;/h2>
&lt;p>Markdown + &lt;a href="https://mermaid.js.org/intro/">Mermaid&lt;/a>，画时序图很方表。
流程图：Draw.io&lt;/p>
&lt;h2 id="多媒体">多媒体&lt;/h2>
&lt;p>ffmpeg：
其实对于个人来说（至少对我），最常用的不是转码，甚至说反而是不去转码，而是无损的包装格式转换，音频抽取，剪切，合并。&lt;/p>
&lt;h2 id="多端同步">多端同步&lt;/h2>
&lt;p>Feem
Bark&lt;/p>
&lt;h2 id="字典">字典&lt;/h2>
&lt;p>汉语：新华字典、现代汉语词典、辞海
日语：新明解
英语：LDOCE 6
以及iOS、MacOS自带的字典们（无法从苹果全家桶抽身的重要原因）。&lt;/p>
&lt;h2 id="浏览器插件">浏览器插件&lt;/h2>
&lt;h2 id="mark">Mark&lt;/h2>
&lt;p>还没用，未来可能会尝试：
(Rustdesk)[https://rustdesk.com/index.html]：开源自建Teamviewer。&lt;/p></content></item></channel></rss>